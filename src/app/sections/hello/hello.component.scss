@use "commons" as c;
@use "utils" as u;
@use "vars" as v;

@mixin transition($delay: 1, $duration: v.$transition-time) {
  transition-property: opacity, transform;
  transition-timing-function: linear(
      0,
      0.359 12%,
      0.836 30.5%,
      1 37.8%,
      0.909 43.9%,
      0.887 46.8%,
      0.88 49.7%,
      0.902 55.1%,
      1 65.5%,
      0.978 69.2%,
      0.97 72.9%,
      1 84.5%,
      1
  );
  transition-duration: $duration;

  transform-origin: top center;

  transition-delay: v.$transition-time * $delay;
}

:host {
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  align-items: flex-start;

  min-height: calc(var(--vh, 1vh) * 100);
  transition: min-height v.$transition-time ease-in-out;

  perspective: 100vw;

  @include c.sectionPadding;

  .hand {
    display: inline-block;
    transform-origin: bottom left;
  }

  .emoticon {
    margin-bottom: 4vh;
    font-size: 12vw;
    font-weight: 500;
    text-transform: uppercase;

    opacity: 0;
    transform: translateY(2vh) rotateX(-25deg);

    @include transition(1, v.$transition-time * 2);

    .primary {
      color: var(--primary-color);
    }

    .secondary {
      color: var(--secondary-color);
    }
  }

  img {
    width: 100%;
    max-width: 94rem;

    opacity: 0;
    transform: translateY(2vh) rotateX(-25deg);

    @include transition(2, v.$transition-time * 3);
  }

  &.visible {
    img,
    .emoticon {
      opacity: 1;
      transform: translateY(0) rotateX(0);
    }
  }

  @include u.media("t") {
    .emoticon {
      font-size: 8vw;
    }
  }

  @include u.media("t") {
    .emoticon {
      font-size: 6.5vw;
    }
  }

  @include u.media("dl") {
    .emoticon {
      font-size: 5vw;
    }
  }
}
